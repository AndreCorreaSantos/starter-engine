module {
func.func @main() {
%_model.fc1.weight = "engine.constant"() {value=dense<[[5, -4, 4, 7, 6, -5, -1, 5, -2, 3, 4, 8, 1, -1, 7, -1, -4, -7, -6, 6, 6, 2, -3, 7, 0, 2, 3, -4, -7, -7, 3, -3, 2, -2, 3, -1, 2, -5, 0, 1, -7, -3, -3, -4, -2, 0, -1, -2, 8, 7, -4, -7, -7, -2, -6, 0, -7, -4, -3, -2, -7, 1, 5, -5, -10, -7, -7, -12, -4, -3, -1, 2, 9, -11, -9, -8, -3, -12, -9, 0, 9, 1, 0, 0, -3, -7, -5, -6, 4, 2, 0, 0, 3, 0, -3, 13, 11, 14, 11, 27, 17, 3, -6, -20, -21, -19, -18, -3, -5, 1, -3, -7, -3, -8, 0, 8, 2, 1, 0, 11, 10, 30, 28, 45, 44, 59, 46, 30, 24, 8, 3, 5, 8, -9, -11, -18, -20, -11, 1, -4, 5, -7, 1, -3, 13, 21, 22, 23, 24, 34, 26, 42, 47, 51, 42, 46, 28, 10, 6, 5, -9, -15, -22, -39, -28, -5, 7, 0, 6, -2, 1, -5, 17, 24, 23, 24, 21, 24, 29, 28, 36, 34, 28, 27, 21, 10, 12, -5, 0, -10, -21, -48, -34, -25, 7, 3, 0, -3, 4, 13, 16, 23, 22, 18, 18, 12, 1, 15, 29, 34, 23, 32, 12, 1, -1, 13, 19, 4, 4, -38, -57, -33, 1, 7, -1, 2, 3, 6, 19, 23, 21, 16, 0, -1, 5, -6, 12, 29, 38, 37, 6, 15, 21, 20, 5, 16, 12, -49, -63, -37, -1, 6, 8, -2, -4, 9, 25, 14, 10, 14, -6, 2, -13, -9, -4, 8, 41, 44, 21, 8, 13, 7, 2, 15, 14, -44, -57, -34, -10, -4, 4, 4, -7, 3, 9, 0, 4, -14, -18, -39, -38, -48, -42, -25, 38, 33, 11, 15, 10, 19, 5, 5, 11, -27, -42, -8, 2, 6, 8, -6, 4, 3, -12, -14, -38, -34, -45, -36, -37, -36, -36, -25, 43, 54, 5, 1, 24, 13, 5, 3, 11, -8, -15, 3, 0, 1, -1, 3, 1, -2, -7, -44, -50, -54, -39, -33, -34, -45, -50, -4, 76, 38, -3, -4, 9, 7, -3, -14, -10, -9, -5, 4, 6, 5, -3, 1, 0, 7, -16, -50, -64, -51, -26, -21, -38, -43, -17, 37, 78, 34, 8, -9, -5, -14, -5, -16, -38, -19, -13, 12, 9, -8, 2, 1, 5, -4, -12, -37, -50, -35, -18, -23, -39, -32, -1, 36, 75, 35, -10, -9, 1, -16, -31, -28, -28, -19, -12, 13, 0, 4, 4, 8, 2, 0, -4, -12, -12, -24, -23, -13, -28, 0, 6, 51, 75, 27, -25, -13, -17, -26, -31, -23, -22, -19, 0, -1, 6, 3, 3, 6, 2, 8, 12, -4, -7, -15, -18, -9, 4, 0, 11, 49, 52, -20, -15, -32, -24, -19, -28, -18, -16, -1, 4, 11, 11, 2, 8, 5, 1, 6, 23, 8, -1, -14, -10, -7, -8, -3, 30, 41, 16, -14, -25, -19, -16, -1, -17, 2, 9, 23, 27, 8, 10, 7, 4, -1, -6, 17, 20, 23, -5, -12, -15, -6, -4, 7, 9, 18, 13, -12, -10, 11, 11, 7, 13, 5, 19, 22, 14, 15, 11, -4, 0, -9, 1, 11, 33, 20, 6, 16, 9, 22, 12, 3, -4, 19, 5, 10, 16, 11, 16, 19, 19, 32, 20, 25, 16, 6, -6, 7, -1, 1, -4, 2, 25, 19, 30, 42, 32, 33, 21, 12, -17, -6, 0, -5, 6, 4, 9, 26, 22, 22, 30, 22, 9, 0, -6, -3, 3, 4, -3, -1, 16, 36, 42, 28, 30, 10, 16, -9, -12, -15, -10, -6, -3, -4, 10, 17, 24, 20, 5, 0, 12, 12, -1, 7, 7, 3, 4, 5, 21, 30, 44, 41, 14, 8, 13, -3, -2, -19, 12, -2, 0, 3, 3, 5, -1, 4, 3, -1, 2, 1, 7, 6, -7, -2, -5, -10, 10, 16, 27, 20, 8, 5, 1, 4, 19, 16, 0, 2, 3, 3, -5, 4, -14, -1, -7, 0, -2, 2, -5, -6, 3, -7, 7, 1, 0, 5, 4, 2, 0, 0, 7, 11, 4, 11, 11, 12, 2, -3, -2, -13, -9, 4, -10, -3, 7, 8, 8, -3, 8, -2, -6, -4, 3, -5, -6, -5, 0, 0, -11, 1, 3, -3, 0, -6, 0, -10, 0, -8, 0, 1, -10, -10, -2, 4, 3, -7, -8, 6, 0, -9, -7, 5, 3, 1, -2, 3, -1, -1, -2, -2, -2, -3, -4, -6, -6, 4, 6, 6, 8, 3, 2, -8, -1, -6, -2, -8, 4, -1, -8, -2, -6, 5, 6, -2, 5, -5, -4, 0, 6, -1, 6, -7, 0, -2, 2, -2, -1, -7, 5, -6, 8, 1], [-2, -4, 0, -3, 4, -4, 6, 4, 4, 2, 6, 0, -6, -6, -2, -5, 5, 0, -2, 8, -5, -3, 3, -8, 7, 0, 1, 6, 3, 5, 4, 4, -6, 8, -1, 7, 5, 8, -7, 7, 3, 5, -7, -3, -2, -7, -6, 5, 0, -6, 5, 0, -3, 2, -6, -2, -7, -1, 1, -2, 2, -2, 0, -7, -6, 5, 0, -8, -6, -6, 0, -10, -13, -2, 4, -5, 0, -3, -5, 2, 3, 1, 2, 1, 5, -5, 8, 5, -5, -5, -4, 9, 8, -6, 7, 4, 18, 14, 8, 16, 2, -3, -9, -10, -18, -7, -9, 4, 1, -5, 6, 6, -2, 7, -7, -2, 0, -2, 0, 3, 14, 15, 38, 46, 43, 45, 50, 48, 33, 28, 14, 3, -18, -11, -5, -5, 6, 0, -6, 5, 5, 5, 8, -2, -5, 4, 20, 16, 20, 38, 40, 60, 58, 50, 33, 26, 25, 27, 7, -1, 11, -10, -4, 3, 16, 19, 6, -6, 1, -6, -5, -3, -2, 13, 10, 20, 27, 39, 40, 45, 41, 53, 45, 51, 30, 29, 28, 28, 17, 11, 7, 23, 45, 26, 11, 4, -3, 0, 0, -4, -5, 15, 10, 18, 34, 14, 16, 22, 39, 37, 49, 55, 40, 26, 22, 21, 35, 13, 3, 39, 68, 46, 8, 8, 2, 4, 5, -8, 2, 8, 5, 4, 7, 5, -3, 9, 21, 31, 34, 44, 30, 3, 26, 22, 28, 31, 19, 57, 94, 54, 11, 9, 0, 5, 2, -9, -9, -1, 9, -1, -8, -1, -2, 12, 1, 12, 24, 23, 19, 14, 17, 19, 25, 26, 23, 59, 101, 55, 11, -2, -2, 0, -6, -2, -13, -4, -5, -8, -1, 0, 3, 4, 0, 8, 30, 30, 20, 8, 13, 15, 15, 15, 19, 51, 67, 54, 4, 2, 7, 3, -6, 1, -4, -1, -7, 7, 9, 1, 10, 7, 4, 42, 44, 34, 0, 3, 5, -4, -8, -27, 5, 21, 40, 28, 1, 6, 1, -9, -2, -11, -12, 10, 2, -1, -10, -3, 0, 0, 16, 40, 53, 17, -3, 10, -3, -6, -16, -27, -13, 8, 0, 8, 0, -8, 4, 3, -3, 5, 0, 7, -11, 0, -10, -14, -27, 0, 33, 39, 37, 19, 11, -7, -4, -11, -14, -29, -19, -9, -2, 1, -4, 3, 0, -8, 2, -5, 6, -1, -24, -27, -17, -17, -20, -8, 15, 40, 31, 16, 6, -6, -20, -31, -30, -17, -22, -15, -10, -1, 5, 1, -7, 6, -3, 1, -7, -21, -32, -38, -25, -21, -5, -19, 19, 31, 1, 6, -13, -38, -23, -26, -33, -24, -16, -11, -15, -15, -4, 0, 9, -1, -2, -4, 6, -27, -40, -37, -26, -17, -15, -12, 13, 6, -18, -26, -39, -34, -26, -21, -25, -21, 0, 9, -9, -17, 2, -1, 5, -2, -5, 9, 4, -3, -8, -29, -24, -20, -23, -13, -2, -29, -51, -41, -24, -8, -1, 3, -2, 0, 2, 9, -9, -11, -2, 2, -5, 3, 7, 13, 6, 19, 32, -2, -21, -4, -7, -4, -45, -51, -41, -19, 2, 13, 17, 7, 18, 24, 17, 10, -16, -24, -2, -5, 0, -8, 13, 17, 21, 41, 54, 30, 26, 14, 12, -10, -10, -18, -10, 4, 13, 15, 20, 20, 31, 34, 23, 2, -13, -17, 5, -1, 8, 7, 12, 17, 20, 38, 59, 48, 46, 25, 17, -2, -8, 0, -13, -6, -8, 8, 15, 21, 23, 27, 22, -1, -23, 0, 2, -3, 1, 5, 7, -1, 23, 26, 50, 45, 39, 19, 4, -11, -19, -16, -15, -7, -8, -4, 4, 5, 29, 7, 4, -17, -17, -15, -7, 4, -3, 7, 2, 8, 7, -2, 16, 36, 19, 11, 15, 19, 20, 25, 8, 0, 12, 8, 4, -2, -8, -7, -16, -8, 1, -8, -2, -3, 7, 3, 8, 3, 0, 3, 6, -7, 11, 10, 25, 28, 43, 42, 32, 16, 13, -1, -3, -11, -13, -9, -4, 5, 0, -9, -4, -8, 6, 5, 4, 4, 10, -3, 6, 23, 25, 20, 35, 37, 29, 37, 5, 10, 20, 23, 25, 23, 16, 12, -4, 8, -6, 2, 4, 8, 4, -8, -4, 4, -4, -3, 0, 14, 23, 23, 32, 32, 24, 36, 39, 39, 52, 45, 46, 43, 28, 21, 11, -1, -6, 4, 6, -7, 2, 0, 7, -6, -7, -7, -1, 2, 1, 14, 4, 20, 18, 31, 29, 16, 28, 15, 8, 11, 21, 5, -7, 4, 6, 8, -6, 3, 0, 2, 2, 7, 5, 9, 8, -2, 1, 4, -1, 8, 1, 6, 3, -3, -8, -7, -1, 7, -3, -3, -5, -5, 1, 1, 1, 8], [-7, 2, 5, -6, 1, -1, -4, -8, 4, -3, 3, -7, 0, 3, 1, -1, -3, -2, 0, 2, 7, 0, 0, -7, -7, -5, 3, 0, -7, 0, 5, -4, 2, -2, 1, 4, 6, 6, 4, 6, 5, 16, 4, -1, 11, 4, 0, -2, 4, 8, -3, 4, 2, 8, 2, -3, 1, -2, 4, -7, 7, 4, 8, 20, 6, 16, 23, 28, 40, 38, 32, 29, 33, 17, 18, 19, 14, 8, -1, 1, 8, -7, -5, 3, 7, 0, 0, -7, -2, 3, 10, 5, 18, 21, 36, 41, 35, 46, 29, 38, 25, 33, 31, 20, 18, 6, 0, 9, 0, 2, -7, 1, -2, 2, 0, 0, 1, -3, 6, 0, 15, 5, 20, 26, 33, 40, 36, 20, 19, 6, -8, -13, -15, -14, -25, -5, -16, -7, -7, -2, -3, -4, -5, -9, -7, -14, 0, 15, 15, 23, 38, 36, 30, 41, 35, 28, 34, 29, 12, 4, -8, -28, -30, -24, -11, -6, 6, -1, -5, 6, -6, 1, 1, -2, -4, 17, 21, 21, 27, 11, 32, 21, 21, 24, 12, 6, 0, 1, 0, -7, -13, -19, -5, 3, 9, 0, -2, 4, -4, 0, -4, 0, 11, 20, 13, -5, 1, 17, 18, 16, 37, 22, 7, 3, 9, 11, -9, 4, 3, 2, 12, 4, -3, 3, 5, 7, 4, 6, 0, -4, 3, 6, 4, 6, 8, 10, 15, 16, 31, 33, 14, -5, -7, 4, 4, 5, 10, 7, 20, 7, 3, 3, -3, -2, 9, 3, 3, 3, 0, -1, -5, -15, -13, -7, -5, 0, 18, -1, -2, -14, -6, -2, -4, 5, 11, 37, 24, 20, 0, 6, -3, -2, -3, -3, 1, -6, -5, -18, -15, -16, -21, -19, -28, -9, 6, -14, -5, -2, -4, -4, 9, 1, 7, 30, 34, -2, 9, 6, -4, 0, 0, 8, -11, -26, -26, -35, -28, -23, -39, -37, -34, -1, -9, -38, -36, -37, -23, 0, -11, 1, 16, 48, 26, -4, 4, -8, 1, -4, -4, -4, -9, -38, -41, -44, -31, -29, -31, -31, 2, 9, -10, -17, -33, -32, -25, -12, -8, 3, 0, 42, 31, -8, -10, 3, -8, 2, 7, -7, -37, -38, -38, -40, -32, -18, -23, -7, 29, 15, 13, -1, -12, -31, -16, -17, -28, -17, 26, 47, 33, -1, 1, 0, 3, -1, 7, -9, -42, -34, -33, -20, -20, -18, -14, 20, 17, 10, 17, -10, -14, -40, -26, -33, -24, -22, 6, 33, 25, -2, 5, -2, -4, -5, -6, -5, -28, -14, -21, -14, -11, 12, 9, 13, 1, 27, 10, -3, -29, -51, -32, -42, -26, -5, -4, 20, 37, 5, 11, 0, -1, -8, -6, 0, -8, 3, -5, -10, -9, 16, 23, 32, 10, 8, 4, -30, -42, -43, -19, 0, -14, -4, -6, 17, 31, 26, 4, -7, 8, 0, 6, 2, 4, 6, 4, -4, -5, 14, 32, 32, -4, -13, -27, -28, -22, 4, 5, 18, 16, 5, 26, 24, 28, 34, 9, -5, -8, -8, -1, 11, 28, 31, 23, 26, 20, 21, 37, 30, 23, -13, -18, -8, 17, 34, 33, 27, 8, 27, 31, 39, 44, 17, 8, 1, -7, -6, 1, 7, 34, 37, 37, 44, 50, 55, 51, 60, 47, 20, 5, 27, 31, 39, 34, 27, 41, 47, 37, 35, 31, 23, 8, -1, 5, 0, 2, 9, 45, 61, 49, 63, 65, 57, 50, 34, 38, 23, 19, 24, 16, 15, 34, 22, 31, 45, 40, 40, 22, 10, -2, -8, -5, -5, 12, 15, 35, 35, 47, 55, 30, 37, 21, 24, 25, 16, 15, 12, 11, 24, 40, 28, 18, 28, 32, 36, 7, 13, -4, 1, -5, -7, 7, 11, 30, 24, 37, 47, 34, 33, 25, 17, 26, 29, 11, 13, 14, 6, 21, 27, 37, 26, 30, 15, 6, -5, 5, 4, 2, -6, -5, 14, 21, 15, 31, 22, 19, 26, 27, 37, 42, 34, 36, 19, 4, 3, 6, 9, 6, 13, 8, 9, -1, -6, 0, 3, 0, -8, -1, -3, 1, -9, -3, 4, 9, 13, 8, 19, 33, 38, 38, 33, 31, 18, 5, -13, -29, -18, -5, 0, -1, -3, 1, 8, 7, -4, 2, 3, 6, -6, -2, -20, -18, -6, 0, 0, 4, 8, 6, 14, 8, 6, -12, -16, -16, -25, -2, -2, -5, -2, 2, 7, -6, -1, -9, -7, -8, -8, -8, -11, -12, -8, -3, 0, 1, -1, -9, -5, 3, -2, -4, 2, -7, -9, 1, -4, -1, 5, 1, 0, -7, 3, -6, -6, -4, 6, 0, 4, -4, -7, 3, 3, 2, -6, 8, 7, 0, -3, -6, -8, 8, -5, 0, -3, 5, 7, 8, 2], [-3, 8, 6, 6, -8, 4, 5, 7, -3, -4, 6, -1, 6, 1, 0, -7, -7, -5, 6, 1, -4, -7, 0, -6, -7, -8, 0, 5, 9, 0, -1, 7, -7, -8, 4, 0, 8, -3, -6, -1, -2, 5, -4, -5, -3, -5, -2, 4, -6, -5, -9, -6, -2, 3, -6, 9, 4, 0, -2, -3, -2, 7, -2, -6, 0, -3, 1, -9, 0, -1, -1, -3, 1, 3, 5, -6, -3, -8, 2, 8, 2, 0, 0, -8, 6, -8, 3, 8, 6, -3, -1, 6, 2, 3, -8, 1, 0, -8, -15, -15, -13, -12, -9, 5, -6, 2, -6, -3, 4, -5, 4, -5, 1, 8, 7, -1, -7, 3, -8, -6, -11, -3, -5, 0, -16, -15, -21, -10, -12, -16, -10, -6, -9, -9, 5, -6, 7, -3, -1, 7, 2, 0, -8, 3, 5, -7, -1, -3, -3, -11, -18, -20, -14, -19, -24, -32, -26, -24, -24, -8, -13, -8, -2, -6, -9, -4, -7, 8, -6, 2, 4, 5, -3, -12, -14, -10, -25, -18, -15, -13, -8, 0, 19, 12, 8, 5, 0, -6, -12, -16, -14, -4, -8, 6, -6, -6, 4, -2, 5, -2, 3, -11, -19, -8, -9, -16, -1, 9, 15, 23, 42, 42, 36, 12, 13, -9, -17, -19, -9, -2, -2, 0, -5, 4, -6, -8, 3, -3, 2, -3, -6, -6, -5, 2, 0, 12, 10, 26, 26, 26, 20, -7, -6, -19, -13, -19, -4, 0, 18, 13, -5, 8, -6, 0, -9, -3, 4, 5, 6, 8, -2, 15, -2, 6, 1, 1, 1, 0, -8, -5, -16, -13, -4, -4, 17, 14, 21, 9, 6, 7, -4, 6, -1, -1, -4, 7, 14, 22, 12, 12, 4, -12, -12, -23, -25, -21, -27, -22, -18, -9, 9, 27, 35, 29, 22, 2, 9, -7, 5, 8, -5, 0, 15, 24, 18, 17, 29, 16, 5, -13, -26, -36, -28, -38, -31, -6, 3, 18, 25, 27, 41, 30, 19, 0, -5, -8, 7, 7, 1, -6, 17, 15, 17, 7, 16, 17, 16, -5, -10, -22, -25, -33, -19, 5, 11, 18, 35, 40, 39, 18, 5, 0, 1, 5, -2, -8, 2, -3, 19, 10, 17, 0, 4, 3, 14, 10, 13, -3, -7, -7, 9, 25, 26, 20, 33, 33, 8, -6, -7, -6, 0, 1, -2, -7, -6, 10, 4, 9, 11, -2, -3, -6, 8, 9, 11, 7, -2, -3, 6, 7, 4, 0, 12, 4, -4, -7, -8, -9, 0, 4, -5, 6, -6, 2, 0, 1, -1, 8, 2, 0, 2, 17, 13, 9, -13, -16, 11, 12, -7, -8, -5, -12, -9, -16, -10, 1, -2, -5, -3, 8, -9, 0, 2, -16, -13, 5, 10, 17, 14, 34, 21, 3, -19, -10, 4, 2, 0, -17, -24, -30, -10, -20, -15, -8, 5, 7, 3, -8, -1, -11, -13, -13, -15, -6, 8, 19, 34, 37, 27, 12, -7, 4, 3, -13, -19, -14, -17, -18, -26, -7, -17, -3, 2, 2, 2, -3, 2, -2, -18, -21, -10, -12, -1, 17, 14, 29, 25, 16, -7, -4, -4, -9, -16, -17, -14, -14, -11, -15, -6, -10, -7, 6, 4, -2, 8, -8, -25, -22, -17, -19, -9, -2, -9, 2, -2, 7, -11, -8, -8, -9, -3, -6, -11, -16, -18, -13, 1, 0, 5, 1, -5, 6, -6, -6, -12, -5, -12, -3, -8, -13, -19, -21, -10, -1, -2, -4, -9, -4, -10, 0, -12, -3, -6, 5, 0, 7, 1, 9, -5, -3, 4, -7, -4, 3, 2, 0, -1, -8, -22, -20, -5, -8, -2, 0, -8, -1, -10, -8, -5, -4, -3, 4, 4, -1, 0, -5, 0, -8, 5, -1, 2, -6, -1, 14, 5, -3, -2, 1, 1, 0, 1, -6, -10, -10, -4, 6, 8, 8, 11, -1, -4, -5, 4, -5, 4, -8, 0, 6, -2, -4, -2, 9, 11, 2, -4, 0, -4, -4, -4, 0, 2, -1, -6, -3, 1, 6, 6, 4, -1, 3, -6, -4, -2, 4, 7, -7, 6, -3, 6, 0, 3, -3, 0, 1, 9, 4, 4, 6, 4, 2, 7, 16, 18, 20, 12, 11, -7, 5, -1, 8, -5, 0, 1, 7, -1, -1, 6, -2, 4, 6, 5, 5, 17, 5, 23, 10, 14, 29, 21, 21, 15, 20, 10, 0, -7, -6, 8, 3, 0, 3, -2, 4, -8, -7, 3, 5, -4, 2, 7, 11, 0, 16, 17, 5, 9, 8, 16, 6, 15, 3, 7, 9, 0, 7, 8, -5, 0, -3, 8, -5, 1, 2, 4, 3, -4, -2, 3, 4, 0, -6, -7, 0, 7, 1, -5, -3, 7, 2, -1, -3, -4, -2, -5, 6], [5, 2, 8, 3, 3, 2, -5, 1, 3, -7, 8, 1, -3, 1, 4, 8, 0, -7, -2, -1, -6, 6, -6, 6, 0, -7, 0, 0, 2, 0, -4, 9, -5, 7, 5, -8, 6, 0, 5, 5, -8, 4, -2, 2, 5, 9, 1, 7, -8, 4, 2, 0, 2, 1, 3, -2, 4, -7, 7, -2, -8, 6, 4, -5, -6, 2, -6, 0, 4, 3, -7, -7, -12, -2, -13, -15, -6, -2, 0, 1, -9, -1, 9, 3, 0, -3, 0, -4, -9, 4, -7, 2, 0, -5, -2, 1, 12, 10, 12, 9, 11, 2, -10, -15, -19, -10, -16, -11, -1, -8, 0, -7, -2, -7, -7, 2, 9, 1, 9, 7, 9, 20, 28, 46, 28, 23, 19, 18, 20, 22, 18, 10, -8, -4, -14, -20, -1, 4, 4, 8, 3, 2, 7, -3, 4, 9, 15, 23, 25, 26, 38, 41, 23, 27, 1, 3, 2, -8, 0, -5, -3, -1, 0, -9, 3, 8, 0, -3, 2, 4, -4, 9, 14, 17, 22, 22, 25, 21, 26, 26, 22, 27, 30, 20, 27, 19, 24, -1, 8, 16, -2, -23, -3, 5, 0, -6, -1, -5, 3, 12, 25, 14, 26, 15, 10, 23, 14, 19, 34, 29, 35, 26, 29, 30, 17, 21, 22, -1, 1, -5, -6, -6, 6, -6, 0, 0, 8, 21, 24, 19, 3, 5, 7, -2, 8, 15, 29, 21, 35, 36, 27, 24, 28, 16, 22, 3, 8, 14, -9, 3, 0, 0, -6, 7, 15, 29, 34, 24, 4, -8, 2, 1, 2, 4, 17, 19, 48, 39, 43, 28, 28, 28, 13, 7, 19, 17, 16, 5, 9, -1, 5, 5, 5, 24, 22, 17, 2, 3, -3, 6, -6, -10, -24, 0, 19, 42, 52, 36, 29, 18, 34, 27, 20, 11, 13, 11, 8, -5, -5, 9, 22, 35, 23, -3, 2, -3, -6, -15, -5, -6, -17, 0, 7, 9, 5, 16, 12, 19, 20, 10, 14, 5, -3, 4, -2, 0, 5, -3, 7, 21, 15, 4, 5, -7, -2, -12, -11, -15, -2, -22, -28, -20, -1, 0, -17, -15, -1, -9, -2, -11, -9, 0, 5, -8, 4, 11, 9, 10, 0, -11, -20, -7, -18, -20, -6, -11, -5, -30, -35, -35, 5, -6, -9, -16, -11, -14, -10, 0, -3, -7, 0, 6, 6, -3, 10, -4, -6, 0, -27, -14, -19, -13, -6, -28, -10, -32, -41, -14, -7, -9, 6, 2, -1, 7, -7, 1, 0, 0, 8, -6, 0, 7, -7, 0, 5, -6, -16, -17, -16, -12, 0, -17, -25, -44, -56, -9, -7, 0, 10, 9, 25, 3, 13, 7, 17, 2, 8, -4, 6, -9, 10, 7, 18, 0, -14, -2, -5, -5, -19, -26, -16, -40, -47, -21, -10, 7, 14, 17, 2, 4, 11, -1, 12, 13, 7, 6, -7, 0, -1, 15, 25, 17, -2, -7, -17, -12, -21, -19, -28, -43, -44, -2, 0, 14, 3, 12, 3, 3, 11, 0, 19, 13, 3, 3, 4, -6, 1, 11, 19, 19, 6, -7, -8, -23, -31, -28, -36, -19, -19, 0, 0, 17, 14, 11, -2, 17, 18, -4, 1, 19, 10, 2, -8, 2, -1, 9, 32, 28, 11, 20, 0, -10, -20, -16, -3, -8, -16, -19, -19, 7, 0, 4, 13, 8, 0, 0, 6, 9, 10, -5, 6, 3, 11, 26, 35, 34, 23, 7, 5, 2, -2, -5, -15, -5, -6, -14, -14, -16, -16, 5, 1, 3, -8, 1, 3, 12, 2, 0, -8, -5, -6, 10, 10, 5, 12, 8, 7, 0, 0, -12, -6, -10, -15, -18, -4, -20, -6, -5, -3, -9, -8, 0, 3, 5, 4, 7, -8, -4, -8, -3, -1, 0, 3, 1, 16, 21, 0, 2, 6, 1, 2, 14, 7, -9, -13, -10, -15, -24, -5, -2, -5, -8, -3, 6, -7, -5, 5, 1, 14, 10, 13, 25, -9, 2, 12, 23, 9, 8, 2, -6, -16, -6, -23, -28, -38, -29, -2, -3, 2, -8, -3, 0, -2, 1, -2, -4, 8, 26, 38, 38, 18, 8, 13, 3, 6, 12, 2, -4, -6, 6, -18, -16, -20, -15, 3, -12, 7, -8, 2, -6, -9, -3, -3, -1, 16, 17, 31, 26, 55, 48, 32, 58, 52, 53, 45, 46, 41, 37, 38, 31, 0, -1, 0, 0, -4, 7, 0, 8, 3, -1, 0, 8, -1, 2, 9, 16, 19, 33, 22, 33, 21, 34, 45, 39, 47, 37, 30, 29, 13, 3, 0, 0, -3, -5, -7, 2, -4, -6, -8, 8, -6, -3, 1, 6, 10, 3, 14, 0, 5, 15, 10, 4, 11, 0, 1, 0, -3, 8, -7, 2, 4, 0, -3, 7]]>:tensor<5x784xi32>} : () -> memref<5x784xi32>
%_model.fc1.bias = "engine.constant"() {value=dense<[3, 80, 131, -41, 291]>:tensor<5xi32>} : () -> memref<5xi32>
%_model.fc2_left2.weight = "engine.constant"() {value=dense<[[270, -6, 40, 140, -130], [-107, -35, 29, -22, -69], [-103, 124, -199, -86, 13], [183, -77, 399, -181, 264], [-162, 141, 252, 2, -147]]>:tensor<5x5xi32>} : () -> memref<5x5xi32>
%_model.fc2_left2.bias = "engine.constant"() {value=dense<[317, -115, 488, -96, 206]>:tensor<5xi32>} : () -> memref<5xi32>
%_model.fc2_right.weight = "engine.constant"() {value=dense<[[262, 171, -100, 131, -182], [102, 447, -31, 206, 246], [-83, -34, -26, 104, -35], [-49, -6, -129, -70, 144], [-174, 246, 219, -73, -183]]>:tensor<5x5xi32>} : () -> memref<5x5xi32>
%_model.fc2_right.bias = "engine.constant"() {value=dense<[29, -78, -53, -84, 80]>:tensor<5xi32>} : () -> memref<5xi32>
%_model.fc3.weight = "engine.constant"() {value=dense<[[-443, 43, -96, 203, 114], [283, -82, -95, -26, -99], [23, -159, 75, 344, -46], [-36, 176, -107, 57, -63], [135, -186, 421, -170, 138], [-136, 95, 31, -99, 202], [23, -366, -153, 58, 297], [-28, 191, 71, 147, -380], [98, 104, -294, -245, 172], [35, 252, 3, -291, -78]]>:tensor<10x5xi32>} : () -> memref<10x5xi32>
%_model.fc3.bias = "engine.constant"() {value=dense<[-207, -49, -188, -274, 318, -48, 60, 163, -167, 320]>:tensor<10xi32>} : () -> memref<10xi32>
%_onnx.Flatten_0 = "engine.constant"() {value=dense<[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 254, 107, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 227, 254, 254, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 254, 254, 165, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 203, 254, 254, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53, 254, 254, 250, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 254, 254, 180, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 196, 254, 248, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 254, 254, 237, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 254, 254, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 254, 238, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 252, 254, 223, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 254, 254, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 254, 238, 53, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 252, 254, 210, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 254, 254, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 254, 234, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 175, 254, 204, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 211, 254, 196, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 158, 254, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 157, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]>:tensor<784xi32>} : () -> memref<784xi32>
%_.model.Flatten_output_0 = "engine.flatten"(%_onnx.Flatten_0) : (memref<784xi32>) -> memref<784xi32> 
%_.model.fc1.Gemm_output_0_int = "engine.matmul"(%_model.fc1.weight,%_.model.Flatten_output_0) : (memref<5x784xi32>,memref<784xi32>) -> memref<5xi32>
%_.model.fc1.Gemm_output_0 = "engine.add"(%_.model.fc1.Gemm_output_0_int,%_model.fc1.bias) : (memref<5xi32>,memref<5xi32>) -> memref<5xi32>
%_.model.Relu_output_0 = "engine.relu"(%_.model.fc1.Gemm_output_0) : (memref<5xi32>) -> memref<5xi32> 
%_.model.fc2_left2.Gemm_output_0_int = "engine.matmul"(%_model.fc2_left2.weight,%_.model.Relu_output_0) : (memref<5x5xi32>,memref<5xi32>) -> memref<5xi32>
%_.model.fc2_left2.Gemm_output_0 = "engine.add"(%_.model.fc2_left2.Gemm_output_0_int,%_model.fc2_left2.bias) : (memref<5xi32>,memref<5xi32>) -> memref<5xi32>
%_.model.Relu_1_output_0 = "engine.relu"(%_.model.fc2_left2.Gemm_output_0) : (memref<5xi32>) -> memref<5xi32> 
%_.model.fc2_right.Gemm_output_0_int = "engine.matmul"(%_model.fc2_right.weight,%_.model.Relu_output_0) : (memref<5x5xi32>,memref<5xi32>) -> memref<5xi32>
%_.model.fc2_right.Gemm_output_0 = "engine.add"(%_.model.fc2_right.Gemm_output_0_int,%_model.fc2_right.bias) : (memref<5xi32>,memref<5xi32>) -> memref<5xi32>
%_.model.Relu_2_output_0 = "engine.relu"(%_.model.fc2_right.Gemm_output_0) : (memref<5xi32>) -> memref<5xi32> 
%_.model.Add_output_0 = "engine.add"(%_.model.Relu_1_output_0,%_.model.Relu_2_output_0) : (memref<5xi32>,memref<5xi32>) -> memref<5xi32> 
%_.model.fc3.Gemm_output_0_int = "engine.matmul"(%_model.fc3.weight,%_.model.Add_output_0) : (memref<10x5xi32>,memref<5xi32>) -> memref<10xi32>
%_.model.fc3.Gemm_output_0 = "engine.add"(%_.model.fc3.Gemm_output_0_int,%_model.fc3.bias) : (memref<10xi32>,memref<10xi32>) -> memref<10xi32>
%_18 = "engine.argmax"(%_.model.fc3.Gemm_output_0) : (memref<10xi32>) -> memref<i32> 
"engine.print"(%_18) : (memref<i32>) -> ()
return
}
}