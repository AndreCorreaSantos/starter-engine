%['onnx::Flatten_0'] = "engine.constant"() {value=dense<[[0.7, 0.7, 0.1, 0.4, 0.7, 0.4, 0.5, 0.2, 0.8, 0.1, 0.8, 0.3, 0.0, 0.8, 0.4, 0.9, 0.5, 0.8, 0.6, 0.7, 1.0, 0.4, 0.4, 0.4, 0.1, 0.1, 0.9, 0.1, 0.7, 0.9, 0.5, 0.1, 0.5, 0.9, 0.7, 0.1, 0.7, 0.5, 0.1, 0.5, 0.4, 0.7, 0.0, 1.0, 0.0, 0.5, 0.7, 0.6, 0.6, 0.2, 0.6, 0.1, 0.0, 0.4, 0.8, 0.6, 0.2, 0.9, 0.4, 0.7, 0.1, 0.4, 0.5, 0.5, 0.0, 0.2, 0.2, 0.6, 0.6, 0.3, 0.4, 0.3, 0.3, 0.6, 0.2, 0.7, 0.2, 0.4, 0.5, 0.2, 0.8, 0.5, 0.6, 0.4, 0.7, 0.6, 0.9, 0.9, 0.7, 0.7, 0.0, 0.2, 0.3, 0.1, 0.1, 0.0, 0.6, 0.3, 0.8, 0.8, 0.4, 0.9, 0.8, 0.7, 0.6, 0.3, 0.9, 0.2, 0.6, 0.3, 0.2, 0.9, 0.2, 0.9, 0.0, 0.4, 0.4, 0.7, 0.6, 0.3, 0.1, 0.3, 0.6, 0.2, 0.3, 0.1, 0.6, 0.2, 0.0, 0.1, 0.8, 0.3, 0.3, 0.6, 0.9, 0.6, 0.2, 0.7, 0.9, 0.5, 0.2, 0.4, 0.0, 0.1, 0.7, 0.6, 0.3, 0.8, 0.8, 0.5, 0.4, 0.6, 0.6, 0.1, 0.0, 0.4, 0.5, 0.6, 0.6, 0.5, 0.6, 0.7, 0.8, 0.8, 0.3, 0.8, 0.0, 0.9, 0.1, 1.0, 0.9, 0.6, 0.5, 0.4, 0.8, 0.7, 0.0, 1.0, 1.0, 1.0, 0.6, 0.0, 0.9, 0.5, 0.4, 1.0, 0.9, 1.0, 0.5, 0.5, 0.2, 0.9, 0.4, 0.7, 0.2, 0.8, 0.7, 0.1, 0.9, 0.1, 0.7, 0.3, 0.1, 0.3, 0.0, 0.7, 0.5, 0.0, 0.4, 0.5, 0.8, 0.3, 0.7, 0.3, 0.7, 0.9, 0.0, 0.3, 0.0, 0.1, 0.7, 0.2, 0.6, 0.8, 0.9, 0.4, 0.8, 1.0, 0.5, 0.2, 0.6, 0.3, 0.1, 0.3, 1.0, 0.5, 0.2, 0.8, 0.8, 0.4, 0.6, 0.5, 0.4, 0.8, 0.6, 0.3, 0.2, 0.9, 0.2, 0.7, 0.4, 0.8, 0.6, 0.0, 0.3, 0.8, 0.8, 0.9, 0.1, 0.7, 0.2, 0.9, 0.8, 0.8, 0.7, 0.0, 0.8, 0.6, 1.0, 0.7, 0.2, 0.7, 0.9, 0.4, 0.6, 0.4, 0.4, 0.4, 0.8, 0.9, 0.7, 0.6, 0.1, 0.1, 0.9, 0.2, 0.9, 0.1, 0.3, 0.3, 0.7, 0.3, 0.8, 0.6, 0.9, 0.7, 0.2, 0.8, 0.2, 0.9, 0.1, 0.5, 0.4, 0.4, 0.2, 0.8, 0.8, 0.1, 0.6, 0.1, 0.9, 0.2, 0.4, 0.3, 0.7, 1.0, 0.5, 0.6, 0.7, 0.6, 0.2, 0.2, 0.3, 0.8, 0.9, 0.6, 0.5, 0.4, 0.5, 0.2, 0.3, 0.7, 0.0, 0.3, 0.5, 0.1, 0.6, 0.8, 1.0, 0.9, 0.3, 0.6, 0.9, 0.8, 0.5, 0.8, 0.2, 0.6, 0.6, 0.4, 0.4, 0.9, 0.5, 0.6, 1.0, 0.2, 0.2, 0.8, 0.2, 0.3, 0.6, 0.4, 0.2, 0.6, 0.1, 0.9, 0.3, 0.6, 0.4, 0.3, 0.1, 0.4, 0.3, 0.8, 0.9, 0.6, 0.8, 0.5, 0.1, 0.1, 0.5, 0.1, 0.4, 0.7, 0.1, 0.1, 0.8, 0.5, 0.8, 0.0, 0.2, 0.8, 0.8, 0.6, 0.3, 0.6, 0.6, 0.1, 1.0, 0.8, 0.4, 0.7, 0.3, 0.6, 0.1, 0.0, 0.0, 0.3, 0.5, 0.6, 0.9, 0.8, 0.3, 0.2, 0.4, 0.9, 0.7, 0.7, 0.2, 0.4, 1.0, 0.2, 0.9, 0.6, 0.3, 0.4, 0.9, 0.9, 0.7, 0.0, 0.3, 0.9, 1.0, 0.3, 0.3, 0.3, 0.6, 0.7, 0.2, 0.2, 0.7, 0.3, 1.0, 0.6, 0.3, 0.3, 0.1, 0.5, 0.3, 0.0, 0.7, 0.6, 0.9, 0.3, 0.4, 0.1, 0.4, 0.3, 0.8, 0.7, 0.8, 0.3, 0.1, 0.5, 0.9, 0.8, 0.7, 0.5, 0.3, 0.9, 0.5, 0.3, 0.8, 0.5, 0.4, 0.8, 0.4, 0.5, 0.4, 0.5, 0.4, 0.1, 0.6, 0.4, 0.8, 0.9, 0.6, 0.5, 0.9, 0.4, 1.0, 0.4, 0.4, 0.7, 0.2, 0.9, 0.4, 0.6, 0.3, 0.5, 0.9, 0.5, 0.5, 0.5, 0.7, 0.3, 0.9, 0.3, 0.1, 1.0, 0.9, 0.6, 0.3, 0.9, 0.8, 0.6, 0.2, 0.6, 0.4, 0.4, 0.9, 1.0, 0.2, 0.8, 0.7, 0.1, 0.7, 0.9, 0.7, 0.5, 1.0, 0.1, 0.7, 1.0, 0.8, 0.1, 0.6, 0.6, 0.3, 0.9, 0.2, 0.6, 1.0, 0.6, 0.1, 0.1, 0.4, 0.3, 1.0, 0.3, 1.0, 0.8, 0.2, 0.1, 0.4, 0.8, 0.7, 0.8, 0.0, 0.7, 0.9, 0.2, 0.7, 0.9, 0.3, 0.9, 0.2, 0.5, 0.9, 0.6, 1.0, 0.0, 1.0, 0.8, 0.9, 0.9, 0.3, 0.3, 0.8, 0.7, 0.1, 0.9, 0.1, 0.2, 0.1, 0.0, 0.5, 0.0, 0.0, 0.8, 0.1, 0.8, 1.0, 0.7, 0.5, 0.6, 0.3, 0.9, 0.7, 0.3, 0.8, 0.1, 0.8, 0.7, 0.1, 0.5, 0.5, 0.7, 0.7, 0.8, 0.3, 0.3, 0.8, 0.7, 0.6, 0.3, 0.1, 0.4, 0.5, 0.6, 0.7, 0.2, 0.3, 0.6, 0.6, 0.9, 0.9, 0.3, 0.1, 0.9, 0.2, 0.3, 0.1, 1.0, 0.7, 0.3, 0.8, 0.7, 0.5, 0.7, 0.1, 0.3, 0.9, 0.7, 0.5, 0.7, 0.9, 0.9, 0.9, 0.9, 0.2, 0.5, 0.0, 0.7, 0.6, 0.5, 0.9, 0.5, 0.1, 0.4, 0.1, 0.6, 0.6, 0.6, 0.4, 0.9, 0.9, 0.6, 0.7, 0.7, 0.2, 0.7, 0.5, 0.5, 0.4, 1.0, 0.5, 0.8, 0.4, 0.5, 0.1, 0.7, 0.2, 0.3, 0.8, 0.4, 0.6, 0.6, 0.1, 0.4, 0.2, 0.2, 0.4, 0.2, 0.9, 0.5, 0.6, 0.5, 0.1, 0.6, 0.5, 0.8, 0.7, 0.9, 0.4, 0.2, 0.3, 0.9, 0.3, 0.5, 0.6, 0.8, 0.1, 0.1, 0.2, 0.3, 0.3, 0.5, 0.1, 0.8, 0.9, 0.4, 1.0, 0.3, 0.1, 0.8, 1.0, 0.2, 0.6, 0.6, 0.5, 0.1, 0.4, 0.8, 0.2, 0.7, 0.1, 0.7, 0.7, 0.5, 0.8, 1.0, 0.6, 0.1, 0.5, 0.2, 0.9, 0.6, 0.6, 0.1, 0.8, 0.2, 0.5, 0.8, 0.5, 0.8, 0.5, 0.3, 0.6, 0.1, 0.9, 0.2, 0.3, 0.8, 0.2, 0.2, 0.6, 0.3, 0.5, 0.3, 0.5, 0.0, 1.0, 0.2, 0.6, 0.9, 0.4, 0.6, 0.1, 0.3, 0.3, 0.6, 0.3, 0.2]]>:tensor<0x1xf64}> 
to be implemented (FLATTEN) 
%/fc1/Gemm_output_0_int = "engine.matmul"(%/Flatten_output_0,%fc1.weight) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/fc1/Gemm_output_0 = "engine.add"(%/fc1/Gemm_output_0_int,%fc1.bias) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/Relu_output_0 = "engine.relu"(%/fc1/Gemm_output_0) : (memref<?xf64>) -> memref<?xf64> 
%/fc2_left/Gemm_output_0_int = "engine.matmul"(%/Relu_output_0,%fc2_left.weight) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/fc2_left/Gemm_output_0 = "engine.add"(%/fc2_left/Gemm_output_0_int,%fc2_left.bias) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/Relu_1_output_0 = "engine.relu"(%/fc2_left/Gemm_output_0) : (memref<?xf64>) -> memref<?xf64> 
%/fc2_left2/Gemm_output_0_int = "engine.matmul"(%/Relu_1_output_0,%fc2_left2.weight) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/fc2_left2/Gemm_output_0 = "engine.add"(%/fc2_left2/Gemm_output_0_int,%fc2_left2.bias) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/Relu_2_output_0 = "engine.relu"(%/fc2_left2/Gemm_output_0) : (memref<?xf64>) -> memref<?xf64> 
%/fc2_right/Gemm_output_0_int = "engine.matmul"(%/Relu_output_0,%fc2_right.weight) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/fc2_right/Gemm_output_0 = "engine.add"(%/fc2_right/Gemm_output_0_int,%fc2_right.bias) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%/Relu_3_output_0 = "engine.relu"(%/fc2_right/Gemm_output_0) : (memref<?xf64>) -> memref<?xf64> 
%/Add_output_0 = "engine.add"(%/Relu_2_output_0,%/Relu_3_output_0) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64> 
%21_int = "engine.matmul"(%/Add_output_0,%fc3.weight) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>
%21 = "engine.add"(%21_int,%fc3.bias) : (memref<?xf64>,memref<?xf64>) -> memref<?xf64>

